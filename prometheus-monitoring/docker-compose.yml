version: '3.3'
services:
  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.retention.time=1d
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana
    # user: "1000"
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
        
  node-exporter:
    image: prom/node-exporter:v1.3.0
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.processes'
      - '--collector.systemd'
    restart: unless-stopped
    #network_mode: host
    ports:
      - 9100:9100


  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      #- /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro
    restart: unless-stopped
    #network_mode: host
    ports:
      - 8080:8080


volumes:
   prometheus-data:
   grafana-data:
